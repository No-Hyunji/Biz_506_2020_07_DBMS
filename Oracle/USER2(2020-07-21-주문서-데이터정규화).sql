-- 여기는 user2화면입니다.

-- 엑셀을 이용하여 상품코드 칼럼에 다수의 상품코드가 저장된 것을 
-- 상품코드1, 상품코드2, 상품코드3 칼럼으로 분리하여 데이터를 생성하고
-- 그 생성한 데이터를 DB에 임포트하기 위해서 테이블을 생성.
create table tbl_주문서원장  (    --[1]
    주문번호 char(6),
    거래일자	 char(10),
    고객코드 char(5),
    고객명 nVARCHAR2(125),
    연락처 varchar2(20),
    상품코드 varchar2(125),
    상품코드1 char(6),
    상품코드2 char(6),
    상품코드3  char(6) 
);

-- 엑셀 파일로부터 생성한 데이터를 임포트하여 준비해 놓은 상태
-- 제 1 정규화 수행
-- 현재 주문문서원장 테이블에 상품코드1,상품코드2,상품코드3 칼럼이 있는데, 
-- 주문건당 판매되는 상품이 3개 이면, 모든 칼럼에 데이터가 채워질것이고, 
-- 1) 건당 판매되는 상품이 3개 미만이면, 나머지 칼럼에는 (null)값이 들어있게 된다.
-- 2) 또는 건당 판매되는 상품이 3개보다 많아지면, 이 테이블은 칼럼을 추가하는 ALTER TABLE 명령을 수행해야 한다.
-- 1) 또는 2) 와 같은 상황이 발생되는 DB는 설계상에 매우 부적절한 경우가 되며
-- 데이터 무결성을 유지하는데도 매우 좋지 않은 상황이 된다.


-- 상품주문서 라는 테이블을 생성하여 
-- 만약 2가지 상품이 주문되었으면
----------------------------------------------------------------------------------------------------------------
-- 주문번호     상품코드
-- 000001       P0001
-- 000001       P0010
--------------------------------------------------
-- 와 같은 형식의 테이블을 만들고 데이터를 분리한다음
-- 주문원장과 연결하는 작업을 수행해야 한다.
-- 상품코드가 여러개일 경우 같은 주문번호를 기준으로 여러개의 레코드가 만들어지는 방식으로 생성한다.

select *
from
(
    select 주문번호, 상품코드1 as o_pcode
    from tbl_주문서원장            --[3] 세미콜론 지움, union
    
    union all
    
    select 주문번호, 상품코드2
    from tbl_주문서원장
    where 상품코드2 is not null     --[4] 세미콜론 지움, union
    
    union all
    
    select 주문번호, 상품코드3
    from tbl_주문서원장
    where 상품코드3 is not null      --[5]  위 수정 다음 실행[6] ,괄호로 묶고 셀렉트 * 실행[7]
    
) -- 세미콜론 지움[8]
order by 주문번호;    --[9]

-- 주문서원장에서 데이터를 분리하여 
-- 주문번호, 상품코드, 데이터를 추출하고
-- 원하는 제1정규화를 수행했다.  --[11] 엑셀
-- 상품주문 테이블데이터를 만들었는데

-- 이 테이블은 주문번호, 상품코드, 실제판매가격 3개의 칼럼을 갖는 테이블이 되었다.
-- 테이블을 만들고 보니, 주문번호, 상품코드에 해당하는 상품명과 판매가격이 없어서 보기가 불편하다.
-- 임의로 상품명, 판매가격 칼럼을 추가하고 데이터를 새롭게 만들었다.

-- 주문번호, 상품코드, 상품명, 판매가격, 실제판매가격 칼럼을 가진 데이터 테이블이 되었다.
-- 이 테이블에 PK키를 설정하려고 후보키를 찾아봤더니 단독사용으로는 PK로 만들 수가 없다,
-- 그래서 어쩔 수 없이 (주문번호, 상품코드) 2개의 키를 복합키로 하여 PK를 설정했다.

-- 데이터 검증작업을 수행한다.
-- 실제판매가격 = f(주문번호, 상품코드) 와 같은 함수가 있다면
-- 주문번호와 상품코드를 매개변수르 전달하여 결과로 실제판매가격을 추출할 수있게 되었다.

-- 그런데, 상품명과 판매가격은 굳이 주문번호를 몰라도 상품코드만으로 해당데이터를 추출 할 수 있더라
-- 상품명 F1(상품코드), 판매가격 = F2(상품코드) 형식의 함수만 있더라도 해당 데이터를 추출 할 수 있더라
-- PK설정된 두 개의 키값이 없어도 상품명과 판매가격을 조회할 수 있다는 것인
-- 이 테이블이 제2정규규칙에 어긋난다 라는 뜻이 된다.

-- 실제판매가격 = f(주문번호, 상품코드)를 호출하여 결과를 얻을 수있는 상태를 "완전함수종석성"이라고 하며
-- 상품명 = F1(상품코드) 또는 판매가격 = F1(상품코드)를 호출하여 결과를 얻을 수 있는 상태를
-- 제2정규화는 현재 테이블에서 "부분함수종속성" 특성을 제거하는 것이다

-- 따라서 현재테이블의 상품코드, 상품명, 판매가격 칼럼을 분리하여 "상품정보"테이블로 보내고
-- 현재 테이블에는 주문번호, 상품코드, 실제판매가격 칼럼만 남겨 놓는 것
-- 이 상태를 제2정규화 완성이라고 한다.

-- 정규화의 가장 큰 목적
-- 추가이상 : 데이터를 추가할 때 임의 칼럼 값이 정해지지 않아 null값이 추가되는 현상
-- 갱신이상 : 데이터를 변경할 때 2개 이상의 레코드가 변경되고, 이 때문에 원치않는 데이터에 변경이 수행되는 현상
-- 삭제이상 : 어던 레코드를 생성하면, 그로인해 다른 정보를 조회할 수 없게 되는 현상
--           상품정보 레코드를 제거하면, 그 상품의 판매데이터는 쓸모없는 데이터가 된다.
--           같은 테이블에 상품이름, 주매입처 와같은 칼럼이 존재할때
--           해당 레코드를 삭제해버리면 주매입처 정보가 같이 사라지는 현상
-- 이러한 현상을 방지하는 목적

-- 데이터의 칼럼들에 필요 없는 칼럼이 존재하여 해당칼럼 값이 null로 채워지는 것을 방지하는 목적
--      데이터베이스 성능, 효율과 관련이 된다.

-- 정보처리 기사 DB 정규화 출제문제
-- 제1정규화,               제2정규화,                     제 3정규화,                   BCNF, 
-- 부분종속성 제거           "부분"종속성 제거              "이행"적함수 제거       "후보키"아닌 결정자 제거
-- "반복"종속성 제거
-- 원자성 설립

-- 제4정규화                제5정규화의 특징이 아닌것, 설명이 아닌것
-- "다치"종속제거              "조인"종속성 이용

-- 반부이다조

select * from tbl_주문서원장;  -- [10] 리스트 잘 나오나 확인

select * from tbl_주문서원장;   --[2] 
